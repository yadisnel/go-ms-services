syntax = "proto3";

package go.micro.api.m3o;

service Accounts {
  rpc Read(ReadAccountRequest) returns (ReadAccountResponse) {};
  rpc CreatePaymentMethod(CreatePaymentMethodRequest) returns (CreatePaymentMethodResponse) {};
  rpc DeletePaymentMethod(DeletePaymentMethodRequest) returns (DeletePaymentMethodResponse) {};
  rpc DefaultPaymentMethod(DefaultPaymentMethodRequest) returns (DefaultPaymentMethodResponse) {};
}

service Projects {
  rpc ValidateGithubToken(ValidateGithubTokenRequest) returns (ValidateGithubTokenResponse) {};
  rpc ValidateProjectName(ValidateProjectNameRequest) returns (ValidateProjectNameResponse) {};
  rpc ValidateEnvironmentName(ValidateEnvironmentNameRequest) returns (ValidateEnvironmentNameResponse) {};
  rpc WebhookAPIKey(WebhookAPIKeyRequest) returns (WebhookAPIKeyResponse) {};

  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {};
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {};
  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse) {};

  rpc CreateEnvironment(CreateEnvironmentRequest) returns (CreateEnvironmentResponse) {};
  rpc UpdateEnvironment(UpdateEnvironmentRequest) returns (UpdateEnvironmentResponse) {};
  rpc DeleteEnvironment(DeleteEnvironmentRequest) returns (DeleteEnvironmentRequest) {};

  rpc Invite(InviteRequest) returns (InviteResponse) {};
}

message User {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string profile_picture_url = 5;
  repeated PaymentMethod payment_methods = 6;
}

message ReadAccountRequest {}

message ReadAccountResponse {
  User user = 1;
}

message Project {
  string id = 1;
  string name = 2;
  string description = 3;
  string repository = 4;
  repeated Environment environments = 5;
  repeated Member members = 6;
}

message Member {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string role = 5;
}

message CreateProjectRequest {
  Project project = 1;
  string github_token = 2;
}

message CreateProjectResponse {
  Project project = 1;
  string client_id = 2;
  string client_secret = 3;
}

message UpdateProjectRequest {
  Project project = 1;
}

message UpdateProjectResponse {}

message ListProjectsRequest {}

message ListProjectsResponse {
  repeated Project projects = 1;
}

message ValidateGithubTokenRequest {
  string token = 1;
}

message ValidateGithubTokenResponse {
  repeated Repository repos = 1;
}

message WebhookAPIKeyRequest {
  string project_id = 1;
}

message WebhookAPIKeyResponse {
  string client_id = 1;
  string client_secret = 2;
}

message Repository {
  string name = 1;
  bool private = 2;
}

message PaymentMethod {
  string id = 1;
  int64 created = 2;
  string card_brand = 3;
  string card_exp_month = 4;
  string card_exp_year = 5;
  string card_last_4 = 6;
  bool default = 7;
}

message CreatePaymentMethodRequest {
  string id = 1;
}
message CreatePaymentMethodResponse {
  PaymentMethod payment_method = 1;
}

message DeletePaymentMethodRequest {
  string id = 1;
}  

message DeletePaymentMethodResponse {}

message DefaultPaymentMethodRequest {
  string id = 1;
}  

message DefaultPaymentMethodResponse {}

message Environment {
  string id = 1;
  string name = 2;
  string namespace = 3;
  string description = 4;
}

message CreateEnvironmentRequest {
  Environment environment = 1;
  string project_id = 2;
}

message CreateEnvironmentResponse {
  Environment environment = 1;
}

message UpdateEnvironmentRequest {
  Environment environment = 1;
}

message UpdateEnvironmentResponse {}

message DeleteEnvironmentRequest {
  string id = 1;
}

message DeleteEnvironmentResponse {}

message ValidateProjectNameRequest {
  string name = 1;
}

message ValidateProjectNameResponse {}

message ValidateEnvironmentNameRequest {
  string project_id = 1;
  string name = 2;
}

message ValidateEnvironmentNameResponse {}

message InviteRequest {
  string project_id = 1;
  string email = 2;
  string name = 3;
}

message InviteResponse {}