<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DocuAPI Example Site</title>
    <link>https://explore.micro.mu/</link>
    <description>Recent content on DocuAPI Example Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://explore.micro.mu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>account</title>
      <link>https://explore.micro.mu/account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/account/</guid>
      <description>account Account.CreatePaymentMethod package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; account_proto &amp;#34;github.com/micro/services/account/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := account_proto.CreatePaymentMethodRequest{} rsp := account_proto.CreatePaymentMethodResponse{} if err := c.Call(&amp;#34;go.micro.srv.account&amp;#34;, &amp;#34;Account.CreatePaymentMethod&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>apps</title>
      <link>https://explore.micro.mu/apps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/apps/</guid>
      <description>apps Apps.Import package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; apps_proto &amp;#34;github.com/micro/services/apps/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := apps_proto.ImportRequest{} rsp := apps_proto.ImportResponse{} if err := c.Call(&amp;#34;go.micro.srv.apps&amp;#34;, &amp;#34;Apps.Import&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>asim</title>
      <link>https://explore.micro.mu/asim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/asim/</guid>
      <description>asim Asim.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; asim_proto &amp;#34;github.com/micro/services/asim/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := asim_proto.Request{} rsp := asim_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.asim&amp;#34;, &amp;#34;Asim.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>auth</title>
      <link>https://explore.micro.mu/auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/auth/</guid>
      <description>auth Auth.Login package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; auth_proto &amp;#34;github.com/micro/services/auth/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := auth_proto.LoginRequest{} rsp := auth_proto.LoginResponse{} if err := c.Call(&amp;#34;go.micro.srv.auth&amp;#34;, &amp;#34;Auth.Login&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>ben</title>
      <link>https://explore.micro.mu/ben/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/ben/</guid>
      <description>ben Ben.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; ben_proto &amp;#34;github.com/micro/services/ben/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := ben_proto.Request{} rsp := ben_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.ben&amp;#34;, &amp;#34;Ben.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>client</title>
      <link>https://explore.micro.mu/client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/client/</guid>
      <description>client Client.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; client_proto &amp;#34;github.com/micro/services/client/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := client_proto.Request{} rsp := client_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.client&amp;#34;, &amp;#34;Client.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>distributed</title>
      <link>https://explore.micro.mu/distributed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/distributed/</guid>
      <description>distributed DistributedNotes.CreateNote package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; distributed_proto &amp;#34;github.com/micro/services/distributed/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := distributed_proto.CreateNoteRequest{} rsp := distributed_proto.CreateNoteResponse{} if err := c.Call(&amp;#34;go.micro.srv.distributed&amp;#34;, &amp;#34;DistributedNotes.CreateNote&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>explore</title>
      <link>https://explore.micro.mu/explore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/explore/</guid>
      <description>explore Explore.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; explore_proto &amp;#34;github.com/micro/services/explore/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := explore_proto.Request{} rsp := explore_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.explore&amp;#34;, &amp;#34;Explore.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>graphql</title>
      <link>https://explore.micro.mu/graphql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/graphql/</guid>
      <description>graphql Graphql.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; graphql_proto &amp;#34;github.com/micro/services/graphql/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := graphql_proto.go.api.Request{} rsp := graphql_proto.go.api.Response{} if err := c.Call(&amp;#34;go.micro.srv.graphql&amp;#34;, &amp;#34;Graphql.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>helloworld</title>
      <link>https://explore.micro.mu/helloworld/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/helloworld/</guid>
      <description>helloworld Helloworld.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; helloworld_proto &amp;#34;github.com/micro/services/helloworld/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := helloworld_proto.Request{} rsp := helloworld_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.helloworld&amp;#34;, &amp;#34;Helloworld.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>home</title>
      <link>https://explore.micro.mu/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/home/</guid>
      <description>home Home.ListApps package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; home_proto &amp;#34;github.com/micro/services/home/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := home_proto.ListAppsRequest{} rsp := home_proto.ListAppsResponse{} if err := c.Call(&amp;#34;go.micro.srv.home&amp;#34;, &amp;#34;Home.ListApps&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>location</title>
      <link>https://explore.micro.mu/location/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/location/</guid>
      <description>location Location.Read package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; location_proto &amp;#34;github.com/micro/services/location/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := location_proto.ReadRequest{} rsp := location_proto.ReadResponse{} if err := c.Call(&amp;#34;go.micro.srv.location&amp;#34;, &amp;#34;Location.Read&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>login</title>
      <link>https://explore.micro.mu/login/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/login/</guid>
      <description>login Login.CreateLogin package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; login_proto &amp;#34;github.com/micro/services/login/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := login_proto.CreateLoginRequest{} rsp := login_proto.CreateLoginResponse{} if err := c.Call(&amp;#34;go.micro.srv.login&amp;#34;, &amp;#34;Login.CreateLogin&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>notes</title>
      <link>https://explore.micro.mu/notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/notes/</guid>
      <description>notes Notes.CreateNote package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; notes_proto &amp;#34;github.com/micro/services/notes/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := notes_proto.CreateNoteRequest{} rsp := notes_proto.CreateNoteResponse{} if err := c.Call(&amp;#34;go.micro.srv.notes&amp;#34;, &amp;#34;Notes.CreateNote&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>payments</title>
      <link>https://explore.micro.mu/payments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/payments/</guid>
      <description>payments Provider.CreatePaymentMethod package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; payments_proto &amp;#34;github.com/micro/services/payments/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := payments_proto.CreatePaymentMethodRequest{} rsp := payments_proto.CreatePaymentMethodResponse{} if err := c.Call(&amp;#34;go.micro.srv.payments&amp;#34;, &amp;#34;Provider.CreatePaymentMethod&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>ping</title>
      <link>https://explore.micro.mu/ping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/ping/</guid>
      <description>ping Ping.Ping package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; ping_proto &amp;#34;github.com/micro/services/ping/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := ping_proto.Request{} rsp := ping_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.ping&amp;#34;, &amp;#34;Ping.Ping&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>platform</title>
      <link>https://explore.micro.mu/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/platform/</guid>
      <description>platform Platform.CreateService package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; platform_proto &amp;#34;github.com/micro/services/platform/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := platform_proto.CreateServiceRequest{} rsp := platform_proto.CreateServiceResponse{} if err := c.Call(&amp;#34;go.micro.srv.platform&amp;#34;, &amp;#34;Platform.CreateService&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>platform-test</title>
      <link>https://explore.micro.mu/platform-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/platform-test/</guid>
      <description>platform-test PlatformTest.GetHealth package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; platform_test_proto &amp;#34;github.com/micro/services/platform-test/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := platform_test_proto.GetHealthRequest{} rsp := platform_test_proto.GetHealthResponse{} if err := c.Call(&amp;#34;go.micro.srv.platform-test&amp;#34;, &amp;#34;PlatformTest.GetHealth&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>pong</title>
      <link>https://explore.micro.mu/pong/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/pong/</guid>
      <description>pong Pong.Pong package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; pong_proto &amp;#34;github.com/micro/services/pong/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := pong_proto.Request{} rsp := pong_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.pong&amp;#34;, &amp;#34;Pong.Pong&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>rex</title>
      <link>https://explore.micro.mu/rex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/rex/</guid>
      <description>rex Rex.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; rex_proto &amp;#34;github.com/micro/services/rex/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := rex_proto.Request{} rsp := rex_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.rex&amp;#34;, &amp;#34;Rex.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>serverless</title>
      <link>https://explore.micro.mu/serverless/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/serverless/</guid>
      <description>serverless Apps.Create package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; serverless_proto &amp;#34;github.com/micro/services/serverless/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := serverless_proto.CreateRequest{} rsp := serverless_proto.CreateResponse{} if err := c.Call(&amp;#34;go.micro.srv.serverless&amp;#34;, &amp;#34;Apps.Create&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>sokolovstas</title>
      <link>https://explore.micro.mu/sokolovstas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/sokolovstas/</guid>
      <description>sokolovstas Sokolovstas.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; sokolovstas_proto &amp;#34;github.com/micro/services/sokolovstas/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := sokolovstas_proto.Request{} rsp := sokolovstas_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.sokolovstas&amp;#34;, &amp;#34;Sokolovstas.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>subscribe</title>
      <link>https://explore.micro.mu/subscribe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/subscribe/</guid>
      <description>subscribe Subscribe.ListSubscriptions package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; subscribe_proto &amp;#34;github.com/micro/services/subscribe/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := subscribe_proto.ListSubscriptionsRequest{} rsp := subscribe_proto.ListSubscriptionsResponse{} if err := c.Call(&amp;#34;go.micro.srv.subscribe&amp;#34;, &amp;#34;Subscribe.ListSubscriptions&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>sumo</title>
      <link>https://explore.micro.mu/sumo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/sumo/</guid>
      <description>sumo Sumo.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; sumo_proto &amp;#34;github.com/micro/services/sumo/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := sumo_proto.Request{} rsp := sumo_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.sumo&amp;#34;, &amp;#34;Sumo.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>users</title>
      <link>https://explore.micro.mu/users/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/users/</guid>
      <description>users Users.Delete package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; users_proto &amp;#34;github.com/micro/services/users/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := users_proto.DeleteRequest{} rsp := users_proto.DeleteResponse{} if err := c.Call(&amp;#34;go.micro.srv.users&amp;#34;, &amp;#34;Users.Delete&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>vtolstov</title>
      <link>https://explore.micro.mu/vtolstov/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/vtolstov/</guid>
      <description>vtolstov Vtolstov.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; vtolstov_proto &amp;#34;github.com/micro/services/vtolstov/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := vtolstov_proto.Request{} rsp := vtolstov_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.vtolstov&amp;#34;, &amp;#34;Vtolstov.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
    <item>
      <title>xian</title>
      <link>https://explore.micro.mu/xian/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://explore.micro.mu/xian/</guid>
      <description>xian Xian.Call package main import ( &amp;#34;github.com/micro/clients/go/client&amp;#34; xian_proto &amp;#34;github.com/micro/services/xian/proto&amp;#34; ) func main() { c := client.NewClient(nil) req := xian_proto.Request{} rsp := xian_proto.Response{} if err := c.Call(&amp;#34;go.micro.srv.xian&amp;#34;, &amp;#34;Xian.Call&amp;#34;, req, &amp;amp;rsp); err != nil { fmt.Println(err) return } fmt.Println(rsp) } // To install &amp;#34;npm install --save @microhq/ng-client&amp;#34; import { Component, OnInit } from &amp;#34;@angular/core&amp;#34;; import { ClientService } from &amp;#34;@microhq/ng-client&amp;#34;; @Component({ selector: &amp;#34;app-example&amp;#34;, templateUrl: &amp;#34;./example.component.html&amp;#34;, styleUrls: [&amp;#34;./example.component.css&amp;#34;] }) export class ExampleComponent implements OnInit { constructor(private mc: ClientService) {} ngOnInit() { this.</description>
    </item>
    
  </channel>
</rss>